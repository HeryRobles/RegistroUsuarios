@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Iniciar Sesión</h3>

<EditForm Model="@loginDTO" OnValidSubmit="IniciarSesion">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Correo Electrónico</label>
        <InputText @bind-Value="loginDTO.Correo" class="form-control" />
        <ValidationMessage For="@(() => loginDTO.Correo)" />
    </div>

    <div class="form-group">
        <label>Contraseña</label>
        <InputText type="password" @bind-Value="loginDTO.Clave" class="form-control" />
        <ValidationMessage For="@(() => loginDTO.Clave)" />
    </div>

    <button type="submit" class="btn btn-primary">Iniciar Sesión</button>
</EditForm>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">
        @mensajeError
    </div>
}

@code {
    private LoginDTO loginDTO = new LoginDTO();
    private string mensajeError;

    private async Task IniciarSesion()
    {
        mensajeError = null;

        try
        {
            var resultado = await AuthService.Login(loginDTO);

            if (resultado)
            {
                Navigation.NavigateTo("/"); 
            }
            else
            {
                mensajeError = "Credenciales inválidas. Por favor, inténtalo de nuevo.";
            }
        }
        catch (Exception ex)
        {
            mensajeError = "Ocurrió un error al iniciar sesión. Inténtalo de nuevo más tarde.";
        }
    }
}
