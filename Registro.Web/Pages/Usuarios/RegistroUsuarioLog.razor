@page "/registro"
@inject IRepository repository
@inject NavigationManager Navigation

<div style="display: flex; flex-direction: column; align-items: center; justify-content: center;">

    <h3>Registro de Usuario</h3>

    <EditForm Model="@registro" OnValidSubmit="RegistrarUsuario" style="width: 100%; max-width: 400px; text-align: center;">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group" style="margin-bottom: 1rem;">
            <label>Nombre Completo</label>
            <InputText @bind-Value="registro.NombreCompleto" class="form-control" />
            <ValidationMessage For="@(() => registro.NombreCompleto)" />
        </div>

        <div class="form-group" style="margin-bottom: 1rem;">
            <label>Correo Electrónico</label>
            <InputText @bind-Value="registro.Correo" class="form-control" />
            <ValidationMessage For="@(() => registro.Correo)" />
        </div>

        <div class="form-group" style="margin-bottom: 1rem;">
            <label>Contraseña</label>
            <InputText type="password" @bind-Value="registro.Clave" class="form-control" />
            <ValidationMessage For="@(() => registro.Clave)" />
        </div>

        <button type="submit" class="btn btn-primary" style="margin-top: 10px;">Registrar</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(mensajeError))
    {
        <div class="alert alert-danger">
            @mensajeError
        </div>
    }

</div>

@code {
    private RegistroUsuariosDTO registro = new RegistroUsuariosDTO();
    private string mensajeError;

    private async Task RegistrarUsuario()
    {
        mensajeError = null;

        try
        {
            var response = await repository.Post<RegistroUsuariosDTO, UsuarioDTO>("api/Usuario/registroCliente", registro);

            if (!response.Error)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                mensajeError = await response.GetErrorMessageAsync();
            }
        }
        catch (Exception ex)
        {
            mensajeError = "Ocurrió un error inesperado. Inténtalo de nuevo más tarde.";
        }
    }
}